{"version":3,"file":"static/js/83.bc69980d.chunk.js","mappings":"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","sources":["ApiServices/movieApi.js","pages/MovieDetails/MovieDetails.styled.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const API_KEY = `1f500d9f06eb9497ae6be27946cb1f23`;\nexport const fetchTrandingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  ).then(response => response.json());\n};\nexport const fetchMoviesByQuery = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(response => response.json());\n};\n\nexport const fetchMovieById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  ).then(response => response.json());\n};\nexport const fetchCastById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => response.json());\n};\n\nexport const fetchReviewsById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  ).then(response => response.json());\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const BackButton = styled(Link)`\n  margin-left: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  gap: 10px;\n`;\n","import styled from '@emotion/styled';\nexport const MovieBox = styled.div`\n  padding-top: 20px;\n  padding-bottom: 5px;\n  display: flex;\n  gap: 20px;\n  border-bottom: 1px solid gray;\n`;\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\nexport const AdditionalBox = styled.div`\n  border-bottom: 1px solid #000;\n`;\n","import PropTypes from 'prop-types';\nimport { InfoBox, MovieBox, AdditionalBox } from './MovieInfo.styled';\nimport { useParams, Link, useLocation } from 'react-router-dom';\n\nexport const MovieInfo = ({ data }) => {\n  const location = useLocation();\n\n  const { movieId } = useParams();\n  const { poster_path, original_title, vote_average, overview, genres } = data;\n  const genresNames = genres.map(genre => genre.name).join(` `);\n  const posterUrl = `https://image.tmdb.org/t/p/w200${poster_path}`;\n  const rating = vote_average.toFixed(1) * 10;\n\n  return (\n    <>\n      <MovieBox>\n        <img src={posterUrl} alt={original_title} />\n        <InfoBox>\n          <h2>{original_title}</h2>\n          <p>User Score: {rating}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genresNames}</p>\n        </InfoBox>\n      </MovieBox>\n      <AdditionalBox>\n        Additional information\n        <ul>\n          <li>\n            <Link\n              to={`/movies/${movieId}/cast`}\n              state={{ from: location.state?.from?? '/' }}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={`/movies/${movieId}/reviews`}\n              state={{ from: location.state?.from?? '/' }}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </AdditionalBox>\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  data: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { BackButton } from './MovieDetails.styled';\nimport { fetchMovieById } from '../../ApiServices/movieApi';\nimport { MovieInfo } from '../../components/MovieInfo/MovieInfo';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        setIsLoading(true);\n        const result = await fetchMovieById(movieId);\n        setMovieData(result);\n      } catch (error) {\n        console.log(error);\n        return alert(`Sorry, please try again`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovie();\n  }, [movieId]);\n  return (\n    <div>\n      <BackButton to={location.state?.from ?? '/'}>\n        <BiArrowBack />\n        Go back\n      </BackButton>\n      {isLoading && <div>...Loading</div>}\n      {movieData && <MovieInfo data={movieData} />}\n      <Suspense fallback={<div>...Loading</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","fetchTrandingMovies","fetch","then","response","json","fetchMoviesByQuery","query","fetchMovieById","id","fetchCastById","fetchReviewsById","BackButton","styled","Link","MovieBox","InfoBox","AdditionalBox","MovieInfo","data","location","useLocation","movieId","useParams","poster_path","original_title","vote_average","overview","genresNames","genres","map","genre","name","join","posterUrl","rating","toFixed","src","alt","to","state","from","useState","movieData","setMovieData","isLoading","setIsLoading","useEffect","result","console","log","alert","fetchMovie","Suspense","fallback"],"sourceRoot":""}