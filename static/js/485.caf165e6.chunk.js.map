{"version":3,"file":"static/js/485.caf165e6.chunk.js","mappings":"uQAAA,IAAMA,EAAO,mCACAC,EAAsB,WACjC,OAAOC,MAAM,2DAAD,OACiDF,IAC3DG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EACYC,EAAqB,SAAAC,GAChC,OAAOL,MAAM,qDAAD,OAC2CF,EAD3C,iCAC2EO,EAD3E,gCAEVJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EAEYG,EAAiB,SAAAC,GAC5B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,oBAC0CT,EAD1C,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EACYK,EAAgB,SAAAD,GAC3B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDT,EADlD,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EAEYM,EAAmB,SAAAF,GAC9B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDT,EADlD,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,C,uFC1BYO,E,OAAaC,EAAAA,GAAH,kF,SCEVC,EAAY,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,UACGG,EAAWG,KAAI,SAAAC,GAAK,OACnB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMV,IAAMY,MAAO,CAAEC,KAAMN,GAAhD,SACGG,EAAMI,SAFFJ,EAAMV,GADI,KAS1B,C,mJCfYe,EAAcX,EAAAA,EAAAA,IAAH,qEAIXY,EAAYZ,EAAAA,EAAAA,GAAH,iE,kBC4BtB,EA7Ba,WACX,OAAoCa,EAAAA,EAAAA,UAAS,MAA7C,eAAOX,EAAP,KAAmBY,EAAnB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEID,GAAa,GAFjB,UAG8B5B,EAAAA,EAAAA,MAH9B,gBAGY8B,EAHZ,EAGYA,QACRJ,EAAcI,GAJlB,uDAMIC,QAAQC,IAAR,MANJ,kBAOWC,MAAM,4BAPjB,yBASIL,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAcdM,EACD,GAAE,KAED,UAACX,EAAD,YACE,SAACC,EAAD,6BACCG,IAAa,wCACbb,IAAc,SAACD,EAAA,EAAD,CAAWC,WAAYA,MAG3C,C,sBChCD,SAASqB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO1C,KAAKqC,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["ApiServices/movieApi.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = `1f500d9f06eb9497ae6be27946cb1f23`;\nexport const fetchTrandingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  ).then(response => response.json());\n};\nexport const fetchMoviesByQuery = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(response => response.json());\n};\n\nexport const fetchMovieById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  ).then(response => response.json());\n};\nexport const fetchCastById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => response.json());\n};\n\nexport const fetchReviewsById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  ).then(response => response.json());\n};\n","import styled from '@emotion/styled';\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MoviesList } from './MovieList.styled';\nexport const MovieList = ({ moviesData }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesList>\n      {moviesData.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </MoviesList>\n  );\n};\n\nMovieList.propTypes = {\n  moviesData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const HomeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const HomeTitle = styled.h1`\n  font-weight: 900;\n  font-size: 36px;\n`;\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { HomeTitle, HomeWrapper } from './Home.styled';\nimport { fetchTrandingMovies } from './../../ApiServices/movieApi';\nconst Home = () => {\n  const [moviesData, setMoviesData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchTrandingMovies();\n        setMoviesData(results);\n      } catch (error) {\n        console.log(error);\n        return alert(`Sorry, please try again`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchData();\n  }, []);\n  return (\n    <HomeWrapper>\n      <HomeTitle>Trending today</HomeTitle>\n      {isLoading && <div>...Loading</div>}\n      {moviesData && <MovieList moviesData={moviesData} />}\n    </HomeWrapper>\n  );\n};\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","fetchTrandingMovies","fetch","then","response","json","fetchMoviesByQuery","query","fetchMovieById","id","fetchCastById","fetchReviewsById","MoviesList","styled","MovieList","moviesData","location","useLocation","map","movie","to","state","from","title","HomeWrapper","HomeTitle","useState","setMoviesData","isLoading","setIsLoading","useEffect","results","console","log","alert","fetchData","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}