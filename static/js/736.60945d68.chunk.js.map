{"version":3,"file":"static/js/736.60945d68.chunk.js","mappings":"uQAAA,IAAMA,EAAO,mCACAC,EAAsB,WACjC,OAAOC,MAAM,2DAAD,OACiDF,IAC3DG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EACYC,EAAqB,SAAAC,GAChC,OAAOL,MAAM,qDAAD,OAC2CF,EAD3C,iCAC2EO,EAD3E,gCAEVJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EAEYG,EAAiB,SAAAC,GAC5B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,oBAC0CT,EAD1C,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EACYK,EAAgB,SAAAD,GAC3B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDT,EADlD,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EAEYM,EAAmB,SAAAF,GAC9B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDT,EADlD,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,C,4JC1BYO,EAAYC,EAAAA,EAAAA,GAAH,mFAKTC,EAAaD,EAAAA,EAAAA,GAAH,mF,SC0CvB,EA5Ca,WACX,OAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEIH,GAAa,GAFjB,UAG2BT,EAAAA,EAAAA,IAAcU,GAHzC,gBAGYG,EAHZ,EAGYA,KACRN,EAAUM,GAJd,uDAMIC,QAAQC,IAAR,MANJ,kBAOWC,MAAM,4BAPjB,yBASIP,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadQ,EACD,GAAE,CAACP,KAGF,2BACGF,IAAa,2CACbF,GACC,SAACF,EAAD,UACGE,EAAOY,KAAI,SAAAC,GACV,IAAMC,EAAU,yCAAqCD,EAAME,cAC3D,OACE,UAACnB,EAAD,YACE,gBAAKoB,IAAKF,EAAYG,MAAM,MAAMC,IAAI,MACtC,uBAAIL,EAAMM,QACV,uCAAeN,EAAMO,eAHPP,EAAMpB,GAMzB,OAGH,oEAIP,C,sBC9CD,SAAS4B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO3C,KAAKsC,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["ApiServices/movieApi.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = `1f500d9f06eb9497ae6be27946cb1f23`;\nexport const fetchTrandingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  ).then(response => response.json());\n};\nexport const fetchMoviesByQuery = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(response => response.json());\n};\n\nexport const fetchMovieById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  ).then(response => response.json());\n};\nexport const fetchCastById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => response.json());\n};\n\nexport const fetchReviewsById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  ).then(response => response.json());\n};\n","import styled from '@emotion/styled';\nexport const ActorItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n","import { fetchCastById } from 'ApiServices/movieApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorItem, ActorsList } from './Cast.styled';\nconst Cast = () => {\n  const [actors, setActors] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchCast() {\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchCastById(movieId);\n        setActors(cast);\n      } catch (error) {\n        console.log(error);\n        return alert(`Sorry, please try again`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <div>...is Loading</div>}\n      {actors ? (\n        <ActorsList>\n          {actors.map(actor => {\n            const actorPhoto = `https://image.tmdb.org/t/p/w200${actor.profile_path}`;\n            return (\n              <ActorItem key={actor.id}>\n                <img src={actorPhoto} width=\"100\" alt=\"\" />\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </ActorItem>\n            );\n          })}\n        </ActorsList>\n      ) : (\n        <p>We don't have any cast for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","fetchTrandingMovies","fetch","then","response","json","fetchMoviesByQuery","query","fetchMovieById","id","fetchCastById","fetchReviewsById","ActorItem","styled","ActorsList","useState","actors","setActors","isLoading","setIsLoading","movieId","useParams","useEffect","cast","console","log","alert","fetchCast","map","actor","actorPhoto","profile_path","src","width","alt","name","character","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}