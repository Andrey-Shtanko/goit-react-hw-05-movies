{"version":3,"file":"static/js/387.ddd8de50.chunk.js","mappings":"uQAAA,IAAMA,EAAO,mCACAC,EAAsB,WACjC,OAAOC,MAAM,2DAAD,OACiDF,IAC3DG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EACYC,EAAqB,SAAAC,GAChC,OAAOL,MAAM,qDAAD,OAC2CF,EAD3C,iCAC2EO,EAD3E,gCAEVJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EAEYG,EAAiB,SAAAC,GAC5B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,oBAC0CT,EAD1C,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EACYK,EAAgB,SAAAD,GAC3B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDT,EADlD,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EAEYM,EAAmB,SAAAF,GAC9B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDT,EADlD,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,C,4JCzBYO,EAAcC,EAAAA,EAAAA,GAAH,mFAKXC,EAAcD,EAAAA,EAAAA,GAAH,mF,SCyCxB,EA3CgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEIH,GAAa,GAFjB,UAG8BR,EAAAA,EAAAA,IAAiBS,GAH/C,gBAGYG,EAHZ,EAGYA,QACRN,EAAWM,GAJf,uDAMIC,QAAQC,IAAR,MANJ,kBAOWC,MAAM,4BAPjB,yBASIP,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadQ,EACD,GAAE,CAACP,KAGF,2BACGF,IAAa,2CACbF,EAAQY,OAAS,GAChB,SAAChB,EAAD,UACGI,EAAQa,KAAI,SAAAC,GACX,OACE,UAAChB,EAAD,YACE,wBAAKgB,EAAOC,UACZ,uBAAID,EAAOE,YAFKF,EAAOrB,GAK5B,OAGH,uEAIP,C,sBC9CD,SAASwB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOvC,KAAKkC,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["ApiServices/movieApi.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = `1f500d9f06eb9497ae6be27946cb1f23`;\nexport const fetchTrandingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  ).then(response => response.json());\n};\nexport const fetchMoviesByQuery = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(response => response.json());\n};\n\nexport const fetchMovieById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  ).then(response => response.json());\n};\nexport const fetchCastById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => response.json());\n};\n\nexport const fetchReviewsById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  ).then(response => response.json());\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\nexport const ReviewsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { fetchReviewsById } from 'ApiServices/movieApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsItem, ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchReviewsById(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n        return alert(`Sorry, please try again`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <div>...is Loading</div>}\n      {reviews.length > 0 ? (\n        <ReviewsList>\n          {reviews.map(review => {\n            return (\n              <ReviewsItem key={review.id}>\n                <h3>{review.author}</h3>\n                <p>{review.content}</p>\n              </ReviewsItem>\n            );\n          })}\n        </ReviewsList>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","fetchTrandingMovies","fetch","then","response","json","fetchMoviesByQuery","query","fetchMovieById","id","fetchCastById","fetchReviewsById","ReviewsList","styled","ReviewsItem","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","results","console","log","alert","fetchReviews","length","map","review","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}